39. Recover Rotated Sorted Array
public class Solution {
    /**
     * @param nums: An integer array
     * @return: nothing
     */
    public void recoverRotatedSortedArray(List<Integer> nums) {
        // write your code here
        if (nums.size() == 0) {
            return;
        }
        int cut = 0;
        for (int i = 1; i < nums.size(); i++) {
            if (nums.get(i) < nums.get(i - 1)) {
                cut = i - 1;
                reverse(0, cut, nums);
                reverse(cut + 1, nums.size() - 1, nums);
                reverse(0, nums.size() - 1, nums);
                return;
            }
        }
    }
    public void reverse(int start, int end, List<Integer> nums){
        for (int i = start, j = end; i < j; i++, j--) {
            Integer temp = nums.get(i);
            nums.set(i, nums.get(j));
            nums.set(j,temp);
        }
    }
}
