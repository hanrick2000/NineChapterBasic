109. Triangle
public class Solution {
    /**
     * @param triangle: a list of lists of integers
     * @return: An integer, minimum path sum
     */
    public int minimumTotal(int[][] triangle) {
        // write your code here
        if (triangle == null || triangle .length == 0|| triangle[0].length == 0) {
            return 0;
        }
        int m = triangle.length;
        int n = triangle[m - 1].length;
        int[][] dp = new int[m][n];
        
        //initialize
        for (int j = 0; j < n; j++) {
            dp[m - 1][j] = triangle[m - 1][j];
        }
        
        //formula
        for (int i = m - 2; i >= 0; i--) {
            for (int j = 0; j < triangle[i].length; j++) {
                dp[i][j] = Math.min(dp[i + 1][j], dp[i + 1][j + 1]) + triangle[i][j];
            }
        }
        
        return dp[0][0];

    }
}
